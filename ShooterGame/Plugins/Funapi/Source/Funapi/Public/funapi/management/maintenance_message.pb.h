// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: funapi/management/maintenance_message.proto

#ifndef PROTOBUF_funapi_2fmanagement_2fmaintenance_5fmessage_2eproto__INCLUDED
#define PROTOBUF_funapi_2fmanagement_2fmaintenance_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "funapi/network/fun_message.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void FUNAPI_API protobuf_AddDesc_funapi_2fmanagement_2fmaintenance_5fmessage_2eproto();
void protobuf_AssignDesc_funapi_2fmanagement_2fmaintenance_5fmessage_2eproto();
void protobuf_ShutdownFile_funapi_2fmanagement_2fmaintenance_5fmessage_2eproto();

class MaintenanceMessage;

// ===================================================================

class FUNAPI_API MaintenanceMessage : public ::google::protobuf::Message {
 public:
  MaintenanceMessage();
  virtual ~MaintenanceMessage();

  MaintenanceMessage(const MaintenanceMessage& from);

  inline MaintenanceMessage& operator=(const MaintenanceMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MaintenanceMessage& default_instance();

  void Swap(MaintenanceMessage* other);

  // implements Message ----------------------------------------------

  MaintenanceMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MaintenanceMessage& from);
  void MergeFrom(const MaintenanceMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string date_start = 1;
  inline bool has_date_start() const;
  inline void clear_date_start();
  static const int kDateStartFieldNumber = 1;
  inline const ::std::string& date_start() const;
  inline void set_date_start(const ::std::string& value);
  inline void set_date_start(const char* value);
  inline void set_date_start(const char* value, size_t size);
  inline ::std::string* mutable_date_start();
  inline ::std::string* release_date_start();
  inline void set_allocated_date_start(::std::string* date_start);

  // optional string date_end = 2;
  inline bool has_date_end() const;
  inline void clear_date_end();
  static const int kDateEndFieldNumber = 2;
  inline const ::std::string& date_end() const;
  inline void set_date_end(const ::std::string& value);
  inline void set_date_end(const char* value);
  inline void set_date_end(const char* value, size_t size);
  inline ::std::string* mutable_date_end();
  inline ::std::string* release_date_end();
  inline void set_allocated_date_end(::std::string* date_end);

  // optional string messages = 3;
  inline bool has_messages() const;
  inline void clear_messages();
  static const int kMessagesFieldNumber = 3;
  inline const ::std::string& messages() const;
  inline void set_messages(const ::std::string& value);
  inline void set_messages(const char* value);
  inline void set_messages(const char* value, size_t size);
  inline ::std::string* mutable_messages();
  inline ::std::string* release_messages();
  inline void set_allocated_messages(::std::string* messages);

  // @@protoc_insertion_point(class_scope:MaintenanceMessage)
 private:
  inline void set_has_date_start();
  inline void clear_has_date_start();
  inline void set_has_date_end();
  inline void clear_has_date_end();
  inline void set_has_messages();
  inline void clear_has_messages();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* date_start_;
  ::std::string* date_end_;
  ::std::string* messages_;
  friend void FUNAPI_API protobuf_AddDesc_funapi_2fmanagement_2fmaintenance_5fmessage_2eproto();
  friend void protobuf_AssignDesc_funapi_2fmanagement_2fmaintenance_5fmessage_2eproto();
  friend void protobuf_ShutdownFile_funapi_2fmanagement_2fmaintenance_5fmessage_2eproto();

  void InitAsDefaultInstance();
  static MaintenanceMessage* default_instance_;
};
// ===================================================================

static const int kPbufMaintenanceFieldNumber = 15;
FUNAPI_API extern ::google::protobuf::internal::ExtensionIdentifier< ::FunMessage,
    ::google::protobuf::internal::MessageTypeTraits< ::MaintenanceMessage >, 11, false >
  pbuf_maintenance;

// ===================================================================

// MaintenanceMessage

// optional string date_start = 1;
inline bool MaintenanceMessage::has_date_start() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MaintenanceMessage::set_has_date_start() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MaintenanceMessage::clear_has_date_start() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MaintenanceMessage::clear_date_start() {
  if (date_start_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_start_->clear();
  }
  clear_has_date_start();
}
inline const ::std::string& MaintenanceMessage::date_start() const {
  // @@protoc_insertion_point(field_get:MaintenanceMessage.date_start)
  return *date_start_;
}
inline void MaintenanceMessage::set_date_start(const ::std::string& value) {
  set_has_date_start();
  if (date_start_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_start_ = new ::std::string;
  }
  date_start_->assign(value);
  // @@protoc_insertion_point(field_set:MaintenanceMessage.date_start)
}
inline void MaintenanceMessage::set_date_start(const char* value) {
  set_has_date_start();
  if (date_start_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_start_ = new ::std::string;
  }
  date_start_->assign(value);
  // @@protoc_insertion_point(field_set_char:MaintenanceMessage.date_start)
}
inline void MaintenanceMessage::set_date_start(const char* value, size_t size) {
  set_has_date_start();
  if (date_start_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_start_ = new ::std::string;
  }
  date_start_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MaintenanceMessage.date_start)
}
inline ::std::string* MaintenanceMessage::mutable_date_start() {
  set_has_date_start();
  if (date_start_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_start_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MaintenanceMessage.date_start)
  return date_start_;
}
inline ::std::string* MaintenanceMessage::release_date_start() {
  clear_has_date_start();
  if (date_start_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = date_start_;
    date_start_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MaintenanceMessage::set_allocated_date_start(::std::string* date_start) {
  if (date_start_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete date_start_;
  }
  if (date_start) {
    set_has_date_start();
    date_start_ = date_start;
  } else {
    clear_has_date_start();
    date_start_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MaintenanceMessage.date_start)
}

// optional string date_end = 2;
inline bool MaintenanceMessage::has_date_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MaintenanceMessage::set_has_date_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MaintenanceMessage::clear_has_date_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MaintenanceMessage::clear_date_end() {
  if (date_end_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_end_->clear();
  }
  clear_has_date_end();
}
inline const ::std::string& MaintenanceMessage::date_end() const {
  // @@protoc_insertion_point(field_get:MaintenanceMessage.date_end)
  return *date_end_;
}
inline void MaintenanceMessage::set_date_end(const ::std::string& value) {
  set_has_date_end();
  if (date_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_end_ = new ::std::string;
  }
  date_end_->assign(value);
  // @@protoc_insertion_point(field_set:MaintenanceMessage.date_end)
}
inline void MaintenanceMessage::set_date_end(const char* value) {
  set_has_date_end();
  if (date_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_end_ = new ::std::string;
  }
  date_end_->assign(value);
  // @@protoc_insertion_point(field_set_char:MaintenanceMessage.date_end)
}
inline void MaintenanceMessage::set_date_end(const char* value, size_t size) {
  set_has_date_end();
  if (date_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_end_ = new ::std::string;
  }
  date_end_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MaintenanceMessage.date_end)
}
inline ::std::string* MaintenanceMessage::mutable_date_end() {
  set_has_date_end();
  if (date_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    date_end_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MaintenanceMessage.date_end)
  return date_end_;
}
inline ::std::string* MaintenanceMessage::release_date_end() {
  clear_has_date_end();
  if (date_end_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = date_end_;
    date_end_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MaintenanceMessage::set_allocated_date_end(::std::string* date_end) {
  if (date_end_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete date_end_;
  }
  if (date_end) {
    set_has_date_end();
    date_end_ = date_end;
  } else {
    clear_has_date_end();
    date_end_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MaintenanceMessage.date_end)
}

// optional string messages = 3;
inline bool MaintenanceMessage::has_messages() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MaintenanceMessage::set_has_messages() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MaintenanceMessage::clear_has_messages() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MaintenanceMessage::clear_messages() {
  if (messages_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messages_->clear();
  }
  clear_has_messages();
}
inline const ::std::string& MaintenanceMessage::messages() const {
  // @@protoc_insertion_point(field_get:MaintenanceMessage.messages)
  return *messages_;
}
inline void MaintenanceMessage::set_messages(const ::std::string& value) {
  set_has_messages();
  if (messages_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messages_ = new ::std::string;
  }
  messages_->assign(value);
  // @@protoc_insertion_point(field_set:MaintenanceMessage.messages)
}
inline void MaintenanceMessage::set_messages(const char* value) {
  set_has_messages();
  if (messages_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messages_ = new ::std::string;
  }
  messages_->assign(value);
  // @@protoc_insertion_point(field_set_char:MaintenanceMessage.messages)
}
inline void MaintenanceMessage::set_messages(const char* value, size_t size) {
  set_has_messages();
  if (messages_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messages_ = new ::std::string;
  }
  messages_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MaintenanceMessage.messages)
}
inline ::std::string* MaintenanceMessage::mutable_messages() {
  set_has_messages();
  if (messages_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    messages_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:MaintenanceMessage.messages)
  return messages_;
}
inline ::std::string* MaintenanceMessage::release_messages() {
  clear_has_messages();
  if (messages_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = messages_;
    messages_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MaintenanceMessage::set_allocated_messages(::std::string* messages) {
  if (messages_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete messages_;
  }
  if (messages) {
    set_has_messages();
    messages_ = messages;
  } else {
    clear_has_messages();
    messages_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:MaintenanceMessage.messages)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_funapi_2fmanagement_2fmaintenance_5fmessage_2eproto__INCLUDED
